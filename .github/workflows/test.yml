name: Test
on: [push, pull_request]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

  test-cli:
    name: Testing @zarm-design/cli on Node.js
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 16, 14, 12, 10]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          # codecov.io requires a fetch depth > 1.
          fetch-depth: 2

      - name: Restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Test
        run: lerna exec --scope @zarm-design/cli -- yarn test --coverage

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)
    needs: setup

  compile-cli:
    name: Compile @zarm-design/cli
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Cache @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: ${{ runner.os }}-cli-${{ github.sha }}

      - name: Compile @zarm-design/cli
        run: lerna exec --scope @zarm-design/cli -- yarn build
    needs: setup

  compile-bem:
    name: Compile @zarm-design/bem
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Restore @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: ${{ runner.os }}-cli-${{ github.sha }}

      - name: Cache @zarm-design/bem
        uses: actions/cache@v3
        with:
          path: packages/bem/lib
          key: ${{ runner.os }}-bem-${{ github.sha }}

      - name: Compile @zarm-design/bem
        run: lerna exec --scope @zarm-design/bem -- yarn build
    needs: compile-cli

  compile-icons:
    name: Compile @zarm-design/icons
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Restore @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: ${{ runner.os }}-cli-${{ github.sha }}

      - name: Restore @zarm-design/bem
        uses: actions/cache@v3
        with:
          path: packages/bem/lib
          key: ${{ runner.os }}-bem-${{ github.sha }}

      - name: Cache @zarm-design/icons
        uses: actions/cache@v3
        with:
          path: packages/zarm-icons/lib
          key: ${{ runner.os }}-icons-${{ github.sha }}

      - name: Compile @zarm-design/icons
        run: lerna exec --scope @zarm-design/icons -- yarn build
    needs: compile-bem

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Lint
        run: yarn lint
    needs: setup

  test:
    name: Test
    strategy:
      matrix:
        react: ['16', '17', '18']
        module: ['dom', 'dist']
    env:
      REACT: ${{ matrix.react }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}

      - name: Restore @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: ${{ runner.os }}-cli-${{ github.sha }}

      - name: Restore @zarm-design/bem
        uses: actions/cache@v3
        with:
          path: packages/bem/lib
          key: ${{ runner.os }}-bem-${{ github.sha }}

      - name: Restore @zarm-design/icons
        uses: actions/cache@v3
        with:
          path: packages/zarm-icons/lib
          key: ${{ runner.os }}-icons-${{ github.sha }}

      - name: install react 16
        if: ${{ matrix.react == '16' }}
        run: lerna exec --scope zarm -- yarn install-react-16

      - name: install react 17
        if: ${{ matrix.react == '17' }}
        run: lerna exec --scope zarm -- yarn install-react-17

      - name: install react 18
        if: ${{ matrix.react == '18' }}
        run: lerna exec --scope zarm -- yarn install-react-18

      # dom test
      - name: dom Test
        if: ${{ matrix.module == 'dom' }}
        run: lerna exec --scope zarm -- yarn coverage

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)

      # dist test
      - name: Dist
        if: ${{ matrix.module == 'dist' }}
        run: lerna exec --scope zarm -- yarn build:umd
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Check Dist
        if: ${{ matrix.module == 'dist' }}
        run: lerna exec --scope zarm -- node ./tests/dekko/dist.test.js

      - name: Bundlesize
        if: ${{ matrix.module == 'dist' }}
        run: lerna exec --scope zarm -- npx bundlesize
        env:
          BUNDLESIZE_GITHUB_TOKEN: ${{ secrets.BUNDLESIZE_GITHUB_TOKEN }}

    needs: [compile-bem, compile-icons, compile-cli]
