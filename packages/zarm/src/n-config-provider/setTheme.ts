import type { ConfigProviderProps } from './interface';

const themes = {
  '--background-color': '#393939',
  '--background-active': '#222',
  '--theme-primary-lighter': '#303030',
  '--color-text': 'rgba(255, 255, 255, 0.85)',
  '--color-text-inverse': 'rgba(255, 255, 255, 0.8)',
  '--color-text-placeholder': 'rgba(255, 255, 255, 0.3)',
  '--color-text-disabled': '#666',
  '--border-color': '#1a1a1a',
  '--opacity-mask': '0.7',
  '--stack-picker-background': '#000',
  '--stack-picker-shadow': 'none',

  '--za-background-color': '#1c1c1e',
  '--za-background-active': '#363738',
  '--za-theme-primary-lighter': '#303030',
  '--za-calendar-background': 'transparent',
  '--za-calendar-week-background': '#303030',
  '--za-calendar-month-scroll-background': 'rgba(0, 0, 0, .5)',
  '--za-color-text': 'rgba(255, 255, 255, 0.85)',
  '--za-color-text-inverse': 'rgba(255, 255, 255, 0.8)',
  '--za-color-text-placeholder': 'rgba(255, 255, 255, 0.3)',
  '--za-color-text-disabled': '#666',
  '--za-border-color': '#3a3b3d',
  '--za-opacity-mask': '0.7',
  '--za-activity-indicator-path-color': '#3a3b3d',
  '--za-button-background': '#393939',
  '--za-button-border-color': 'transparent',
  '--za-button-text-color': 'rgba(255, 255, 255, 0.85)',
  '--za-button-active-background': 'rgba(255, 255, 255, 0.2)',
  '--za-button-active-border-color': 'transparent',
  '--za-button-active-text-color': '#fff',
  '--za-badge-border-color': 'transparent',
  '--za-list-item-background': '#1c1c1e',
  '--za-list-item-active-background': '#363738',
  '--za-list-item-arrow-color': '#666',
  '--za-list-item-separator-color': 'rgba(84, 84, 88, 0.65)',
  '--za-list-item-info-text-color': 'rgba(235, 235, 245, 0.6)',
  '--za-list-item-after-text-color': 'rgba(235, 235, 245, 0.6)',
  '--za-loading-background': '#2b2c2d',
  '--za-collapse-arrow-color': '#666',
  '--za-collapse-arrow-disabled-color': '#333',
  '--za-checkbox-widget-background': 'transparent',
  '--za-checkbox-widget-border-color': 'rgb(72, 72, 74)',
  '--za-checkbox-disabled-widget-background': '#333',
  '--za-checkbox-disabled-widget-border-color': 'rgba(72, 72, 74, 0.7)',
  '--za-checkbox-disabled-text-color': 'rgba(255, 255, 255, 0.3)',
  '--za-checkbox-disabled-marker-color': 'rgba(255, 255, 255, 0.2)',
  '--za-radio-widget-background': 'transparent',
  '--za-radio-widget-border-color': 'rgb(72, 72, 74)',
  '--za-radio-disabled-widget-background': '#333',
  '--za-radio-disabled-widget-border-color': 'rgba(72, 72, 74, 0.7)',
  '--za-radio-disabled-text-color': 'rgba(255, 255, 255, 0.3)',
  '--za-radio-disabled-marker-color': 'rgba(255, 255, 255, 0.2)',
  '--za-input-clear-icon-color': '#8e8e93',
  '--za-keyboard-background': '#323234',
  '--za-keyboard-item-background': '#434343',
  '--za-keyboard-item-box-shadow': '0 1px 0 #000',
  '--za-switch-background': 'rgba(120, 120, 128, 0.32)',
  '--za-stepper-input-background': '#000',
  '--za-panel-header-color': 'rgba(235, 235, 245, 0.6)',
  '--za-panel-body-background': '#1c1c1e',
  '--za-progress-background': 'var(--za-border-color)',
  '--za-picker-background': '#000',
  '--za-picker-header-background': '#1b1c1e',
  '--za-picker-mask-background-start': 'rgba(0, 0, 0, 0.4)',
  '--za-picker-mask-background-end': 'rgba(0, 0, 0, 0.8)',
  '--za-picker-item-selected-background': 'rgba(116, 116, 128, 0.18)',
  '--za-modal-background': '#2b2c2d',
  '--za-modal-close-color': 'rgba(255, 255, 255, 0.3)',
  '--za-modal-close-active-color': 'rgba(255, 255, 255, 0.65)',
  '--za-nav-bar-background': '#1b1c1e',
  '--za-slider-line-background': '#3a3b3d',
  '--za-slider-dot-border-color': '#3a3b3d',
  '--za-search-bar-input-background': 'rgba(118, 118, 128, 0.24)',
  '--za-search-bar-input-placeholder-color': '#8e8e93',
  '--za-search-bar-icon-color': '#8e8e93',
  '--za-action-sheet-item-background': '#222222',
  '--za-action-sheet-cancel-background': '#2c2c2e',
  '--za-rate-color': '#393939',
  '--za-tabbar-background': '#1b1c1e',
  '--za-toast-background': '#2b2c2d',
  '--za-tooltip-background': '#5b5c60',
} as const;

const setTheme = (value: ConfigProviderProps['theme']) => {
  document.body.setAttribute('data-theme', value!);
  Object.keys(themes).forEach((key) => {
    value === 'dark'
      ? document.documentElement.style.setProperty(key, themes[key])
      : document.documentElement.style.removeProperty(key);
  });
};

export default setTheme;
