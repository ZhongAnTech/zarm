// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select Cascader Select 1`] = `
<Select
  cols={Infinity}
  dataSource={
    Array [
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "11",
          },
          Object {
            "label": "选项二",
            "value": "12",
          },
        ],
        "label": "选项一",
        "value": "1",
      },
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "21",
          },
          Object {
            "label": "选项二",
            "value": "22",
          },
        ],
        "label": "选项一",
        "value": "2",
      },
    ]
  }
  displayRender={[Function]}
  itemRender={[Function]}
  maskClosable={true}
  onClick={[Function]}
  valueMember="value"
>
  <div
    className="za-select za-select--placeholder"
    onClick={[Function]}
  >
    <div
      className="za-select__input"
    >
      <div
        className="za-select__value"
      >
        请选择
      </div>
    </div>
    <div
      className="za-select__arrow"
    />
    <ForwardRef(forwardRef)
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "11",
              },
              Object {
                "label": "选项二",
                "value": "12",
              },
            ],
            "label": "选项一",
            "value": "1",
          },
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "21",
              },
              Object {
                "label": "选项二",
                "value": "22",
              },
            ],
            "label": "选项一",
            "value": "2",
          },
        ]
      }
      itemRender={[Function]}
      maskClosable={true}
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onOk={[Function]}
      valueMember="value"
      visible={false}
    >
      <ConfigReceiver
        cols={Infinity}
        dataSource={
          Array [
            Object {
              "children": Array [
                Object {
                  "label": "选项一",
                  "value": "11",
                },
                Object {
                  "label": "选项二",
                  "value": "12",
                },
              ],
              "label": "选项一",
              "value": "1",
            },
            Object {
              "children": Array [
                Object {
                  "label": "选项一",
                  "value": "21",
                },
                Object {
                  "label": "选项二",
                  "value": "22",
                },
              ],
              "label": "选项一",
              "value": "2",
            },
          ]
        }
        forwardedRef={null}
        itemRender={[Function]}
        maskClosable={true}
        onCancel={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onOk={[Function]}
        valueMember="value"
        visible={false}
      >
        <Picker
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "11",
                  },
                  Object {
                    "label": "选项二",
                    "value": "12",
                  },
                ],
                "label": "选项一",
                "value": "1",
              },
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "21",
                  },
                  Object {
                    "label": "选项二",
                    "value": "22",
                  },
                ],
                "label": "选项一",
                "value": "2",
              },
            ]
          }
          destroy={false}
          itemRender={[Function]}
          locale={
            Object {
              "cancelText": "取消",
              "okText": "确定",
              "title": "请选择",
            }
          }
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          prefixCls="za-picker"
          safeIphoneX={false}
          valueMember="value"
          visible={false}
        >
          <Popup
            destroy={false}
            lockScroll={true}
            onMaskClick={[Function]}
            visible={false}
          />
        </Picker>
      </ConfigReceiver>
    </ForwardRef(forwardRef)>
  </div>
</Select>
`;

exports[`Select Cascader Select init value 1`] = `
<Select
  cols={Infinity}
  dataSource={
    Array [
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "11",
          },
          Object {
            "label": "选项二",
            "value": "12",
          },
        ],
        "label": "选项一",
        "value": "1",
      },
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "21",
          },
          Object {
            "label": "选项二",
            "value": "22",
          },
        ],
        "label": "选项一",
        "value": "2",
      },
    ]
  }
  displayAddon="-"
  displayRender={[Function]}
  itemRender={[Function]}
  maskClosable={true}
  onClick={[Function]}
  value={
    Array [
      "1",
      "12",
    ]
  }
  valueMember="value"
>
  <div
    className="za-select"
    onClick={[Function]}
  >
    <div
      className="za-select__input"
    >
      <div
        className="za-select__value"
      >
        选项一
        选项二
      </div>
    </div>
    <div
      className="za-select__arrow"
    />
    <ForwardRef(forwardRef)
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "11",
              },
              Object {
                "label": "选项二",
                "value": "12",
              },
            ],
            "label": "选项一",
            "value": "1",
          },
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "21",
              },
              Object {
                "label": "选项二",
                "value": "22",
              },
            ],
            "label": "选项一",
            "value": "2",
          },
        ]
      }
      displayAddon="-"
      itemRender={[Function]}
      maskClosable={true}
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onOk={[Function]}
      value={
        Array [
          "1",
          "12",
        ]
      }
      valueMember="value"
      visible={false}
    >
      <ConfigReceiver
        cols={Infinity}
        dataSource={
          Array [
            Object {
              "children": Array [
                Object {
                  "label": "选项一",
                  "value": "11",
                },
                Object {
                  "label": "选项二",
                  "value": "12",
                },
              ],
              "label": "选项一",
              "value": "1",
            },
            Object {
              "children": Array [
                Object {
                  "label": "选项一",
                  "value": "21",
                },
                Object {
                  "label": "选项二",
                  "value": "22",
                },
              ],
              "label": "选项一",
              "value": "2",
            },
          ]
        }
        displayAddon="-"
        forwardedRef={null}
        itemRender={[Function]}
        maskClosable={true}
        onCancel={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onOk={[Function]}
        value={
          Array [
            "1",
            "12",
          ]
        }
        valueMember="value"
        visible={false}
      >
        <Picker
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "11",
                  },
                  Object {
                    "label": "选项二",
                    "value": "12",
                  },
                ],
                "label": "选项一",
                "value": "1",
              },
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "21",
                  },
                  Object {
                    "label": "选项二",
                    "value": "22",
                  },
                ],
                "label": "选项一",
                "value": "2",
              },
            ]
          }
          destroy={false}
          displayAddon="-"
          itemRender={[Function]}
          locale={
            Object {
              "cancelText": "取消",
              "okText": "确定",
              "title": "请选择",
            }
          }
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          prefixCls="za-picker"
          safeIphoneX={false}
          value={
            Array [
              "1",
              "12",
            ]
          }
          valueMember="value"
          visible={false}
        >
          <Popup
            destroy={false}
            lockScroll={true}
            onMaskClick={[Function]}
            visible={false}
          />
        </Picker>
      </ConfigReceiver>
    </ForwardRef(forwardRef)>
  </div>
</Select>
`;

exports[`Select Select 1`] = `
<Select
  cols={Infinity}
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
  displayRender={[Function]}
  itemRender={[Function]}
  maskClosable={true}
  onClick={[Function]}
  valueMember="value"
>
  <div
    className="za-select za-select--placeholder"
    onClick={[Function]}
  >
    <div
      className="za-select__input"
    >
      <div
        className="za-select__value"
      >
        请选择
      </div>
    </div>
    <div
      className="za-select__arrow"
    />
    <ForwardRef(forwardRef)
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      itemRender={[Function]}
      maskClosable={true}
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onOk={[Function]}
      valueMember="value"
      visible={false}
    >
      <ConfigReceiver
        cols={Infinity}
        dataSource={
          Array [
            Object {
              "label": "选项一",
              "value": "1",
            },
            Object {
              "label": "选项二",
              "value": "2",
            },
          ]
        }
        forwardedRef={null}
        itemRender={[Function]}
        maskClosable={true}
        onCancel={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onOk={[Function]}
        valueMember="value"
        visible={false}
      >
        <Picker
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "label": "选项一",
                "value": "1",
              },
              Object {
                "label": "选项二",
                "value": "2",
              },
            ]
          }
          destroy={false}
          itemRender={[Function]}
          locale={
            Object {
              "cancelText": "取消",
              "okText": "确定",
              "title": "请选择",
            }
          }
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          prefixCls="za-picker"
          safeIphoneX={false}
          valueMember="value"
          visible={false}
        >
          <Popup
            destroy={false}
            lockScroll={true}
            onMaskClick={[Function]}
            visible={false}
          />
        </Picker>
      </ConfigReceiver>
    </ForwardRef(forwardRef)>
  </div>
</Select>
`;

exports[`Select Select disabled 1`] = `
<Select
  cols={Infinity}
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
  disabeld={true}
  displayRender={[Function]}
  itemRender={[Function]}
  maskClosable={true}
  onClick={[Function]}
  valueMember="value"
>
  <div
    className="za-select za-select--placeholder"
    onClick={[Function]}
  >
    <div
      className="za-select__input"
    >
      <div
        className="za-select__value"
      >
        请选择
      </div>
    </div>
    <div
      className="za-select__arrow"
    />
    <ForwardRef(forwardRef)
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      disabeld={true}
      itemRender={[Function]}
      maskClosable={true}
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onOk={[Function]}
      valueMember="value"
      visible={true}
    >
      <ConfigReceiver
        cols={Infinity}
        dataSource={
          Array [
            Object {
              "label": "选项一",
              "value": "1",
            },
            Object {
              "label": "选项二",
              "value": "2",
            },
          ]
        }
        disabeld={true}
        forwardedRef={null}
        itemRender={[Function]}
        maskClosable={true}
        onCancel={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onOk={[Function]}
        valueMember="value"
        visible={true}
      >
        <Picker
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "label": "选项一",
                "value": "1",
              },
              Object {
                "label": "选项二",
                "value": "2",
              },
            ]
          }
          destroy={false}
          disabeld={true}
          itemRender={[Function]}
          locale={
            Object {
              "cancelText": "取消",
              "okText": "确定",
              "title": "请选择",
            }
          }
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          prefixCls="za-picker"
          safeIphoneX={false}
          valueMember="value"
          visible={true}
        >
          <Popup
            destroy={false}
            lockScroll={true}
            onMaskClick={[Function]}
            visible={true}
          >
            <Portal
              animationDuration={200}
              animationType="fade"
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={true}
              onMaskClick={[Function]}
              prefixCls="za-popup"
              visible={true}
            >
              <Trigger
                disabled={false}
                onClose={[Function]}
                visible={true}
              >
                <Portal
                  containerInfo={
                    <div
                      class="za-popup-container"
                    >
                      <div
                        class="za-mask za-fade-enter za-mask--normal"
                        style="animation-duration: 200ms;"
                      />
                      <div
                        class="za-popup__wrapper"
                        data-width="0"
                        role="dialog"
                      >
                        <div
                          class="za-popup za-popup--bottom za-popup--show"
                          data-width="0"
                          role="document"
                          style="transition-duration: 200ms; transition-property: transform;"
                        >
                          <div
                            class="za-picker"
                          >
                            <div
                              class="za-picker__header"
                            >
                              <div
                                class="za-picker__cancel"
                              >
                                取消
                              </div>
                              <div
                                class="za-picker__title"
                              >
                                请选择
                              </div>
                              <div
                                class="za-picker__submit"
                              >
                                确定
                              </div>
                            </div>
                            <div
                              class="za-picker-view"
                            >
                              <div
                                class="za-picker-view__content"
                              >
                                <div
                                  class="za-wheel"
                                >
                                  <div
                                    class="za-wheel__content"
                                    style="transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-property: transform; transition-duration: 800ms; transform: translateX(0px) translateY(NaNpx);"
                                  >
                                    <div
                                      class="za-wheel__item za-wheel__item--selected"
                                      style="transform: rotateX(NaNdeg); transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; pointer-events: none;"
                                    >
                                      选项一
                                    </div>
                                    <div
                                      class="za-wheel__item"
                                      style="transform: rotateX(NaNdeg); transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; pointer-events: none;"
                                    >
                                      选项二
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="za-picker-view__mask za-picker-view__mask--top"
                              />
                              <div
                                class="za-picker-view__mask za-picker-view__mask--bottom"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  }
                >
                  <Mask
                    className="za-fade-enter"
                    style={
                      Object {
                        "WebkitAnimationDuration": "200ms",
                        "animationDuration": "200ms",
                      }
                    }
                    type="normal"
                    visible={true}
                  >
                    <div
                      className="za-mask za-fade-enter za-mask--normal"
                      style={
                        Object {
                          "WebkitAnimationDuration": "200ms",
                          "animationDuration": "200ms",
                        }
                      }
                    />
                  </Mask>
                  <div
                    className="za-popup__wrapper"
                    data-width={0}
                    onClick={[Function]}
                    role="dialog"
                    style={Object {}}
                  >
                    <div
                      className="za-popup za-popup--bottom"
                      data-width={0}
                      role="document"
                      style={
                        Object {
                          "WebkitTransitionDuration": "200ms",
                          "WebkitTransitionProperty": "transform",
                          "transitionDuration": "200ms",
                          "transitionProperty": "transform",
                        }
                      }
                    >
                      <div
                        className="za-picker"
                        onClick={[Function]}
                      >
                        <div
                          className="za-picker__header"
                        >
                          <div
                            className="za-picker__cancel"
                            onClick={[Function]}
                          >
                            取消
                          </div>
                          <div
                            className="za-picker__title"
                          >
                            请选择
                          </div>
                          <div
                            className="za-picker__submit"
                            onClick={[Function]}
                          >
                            确定
                          </div>
                        </div>
                        <PickerView
                          cols={Infinity}
                          dataSource={
                            Array [
                              Object {
                                "label": "选项一",
                                "value": "1",
                              },
                              Object {
                                "label": "选项二",
                                "value": "2",
                              },
                            ]
                          }
                          disabeld={true}
                          disabled={false}
                          itemRender={[Function]}
                          localeCode="zh-CN"
                          onChange={[Function]}
                          onClick={[Function]}
                          prefixCls="za-picker-view"
                          safeIphoneX={false}
                          stopScroll={false}
                          value={
                            Array [
                              "1",
                            ]
                          }
                          valueMember="value"
                        >
                          <div
                            className="za-picker-view"
                          >
                            <div
                              className="za-picker-view__content"
                            >
                              <Wheel
                                dataSource={
                                  Array [
                                    Object {
                                      "label": "选项一",
                                      "value": "1",
                                    },
                                    Object {
                                      "label": "选项二",
                                      "value": "2",
                                    },
                                  ]
                                }
                                disabled={false}
                                itemRender={[Function]}
                                key="0"
                                onChange={[Function]}
                                stopScroll={false}
                                value="1"
                                valueMember="value"
                              >
                                <div
                                  className="za-wheel"
                                >
                                  <div
                                    className="za-wheel__content"
                                  >
                                    <div
                                      className="za-wheel__item za-wheel__item--selected"
                                      key="0"
                                    >
                                      选项一
                                    </div>
                                    <div
                                      className="za-wheel__item"
                                      key="1"
                                    >
                                      选项二
                                    </div>
                                  </div>
                                </div>
                              </Wheel>
                            </div>
                            <div
                              className="za-picker-view__mask za-picker-view__mask--top"
                            />
                            <div
                              className="za-picker-view__mask za-picker-view__mask--bottom"
                            />
                          </div>
                        </PickerView>
                      </div>
                    </div>
                  </div>
                </Portal>
              </Trigger>
            </Portal>
          </Popup>
        </Picker>
      </ConfigReceiver>
    </ForwardRef(forwardRef)>
  </div>
</Select>
`;

exports[`Select render defaultValue correctly  1`] = `
<Select
  cols={Infinity}
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
  defaultValue="2"
  displayRender={[Function]}
  itemRender={[Function]}
  maskClosable={true}
  onClick={[Function]}
  valueMember="value"
>
  <div
    className="za-select"
    onClick={[Function]}
  >
    <div
      className="za-select__input"
    >
      <div
        className="za-select__value"
      >
        选项二
      </div>
    </div>
    <div
      className="za-select__arrow"
    />
    <ForwardRef(forwardRef)
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      itemRender={[Function]}
      maskClosable={true}
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onOk={[Function]}
      valueMember="value"
      visible={false}
    >
      <ConfigReceiver
        cols={Infinity}
        dataSource={
          Array [
            Object {
              "label": "选项一",
              "value": "1",
            },
            Object {
              "label": "选项二",
              "value": "2",
            },
          ]
        }
        forwardedRef={null}
        itemRender={[Function]}
        maskClosable={true}
        onCancel={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onOk={[Function]}
        valueMember="value"
        visible={false}
      >
        <Picker
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "label": "选项一",
                "value": "1",
              },
              Object {
                "label": "选项二",
                "value": "2",
              },
            ]
          }
          destroy={false}
          itemRender={[Function]}
          locale={
            Object {
              "cancelText": "取消",
              "okText": "确定",
              "title": "请选择",
            }
          }
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          prefixCls="za-picker"
          safeIphoneX={false}
          valueMember="value"
          visible={false}
        >
          <Popup
            destroy={false}
            lockScroll={true}
            onMaskClick={[Function]}
            visible={false}
          />
        </Picker>
      </ConfigReceiver>
    </ForwardRef(forwardRef)>
  </div>
</Select>
`;
